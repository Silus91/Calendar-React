{"ast":null,"code":"var _jsxFileName = \"/home/dawid/trening/call/src/components/addEditTask/AddEditTask.jsx\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { Button } from \"../button/Button\";\nimport TextInput from '../textInput/TextInput';\nimport M from \"materialize-css\";\n\nconst AddEditIngredient = ({\n  id = 'id',\n  ...props\n}) => {\n  useEffect(() => {\n    M.AutoInit();\n  }, []); //   const { dispatch } = useContext(StoreContext);\n  //   const [state, setState] = useState({\n  //     ingredientName: \"\",\n  //     ingredientCost: \"\",\n  //     ingredientWeight: \"\",\n  //   });\n  //   useEffect(() => {\n  //     M.AutoInit();\n  //     if (props.ingredient) {\n  //       setState({\n  //         ...state,\n  //         ingredientName: props.ingredient.ingredientName,\n  //         ingredientCost: props.ingredient.ingredientCost,\n  //         ingredientWeight: props.ingredient.ingredientWeight,\n  //       });\n  //     }\n  //   }, []);\n\n  const handleChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.value\n    });\n  }; //   const dataMap = () => {\n  //     const newIngredient = {\n  //       ingredientName: state.ingredientName,\n  //       ingredientCost: parseFloat(state.ingredientCost),\n  //       ingredientWeight: parseFloat(state.ingredientWeight),\n  //       ingredientRatio: parseFloat(\n  //         state.ingredientCost / state.ingredientWeight\n  //       ),\n  //     };\n  //     if(props.ingredient){\n  //       newIngredient.id = props.ingredient.id\n  //     }\n  //     return newIngredient;\n  //   };\n  //   function sendDataIngredient (newIngredient) {\n  //     if (props.ingredient) {\n  //       sendEditIngredient(newIngredient);\n  //       } else {\n  //         sendNewIngredient(newIngredient);\n  //       }\n  //   }\n  //   const sendNewIngredient = (newIngredient) => {\n  //     loadingAction(dispatch, async () => {\n  //       const response = await axios.post(`${API_BASE_URL\n  //       }/ingredient`, newIngredient);\n  //       dispatch({ type: INGREDIENT_ADD, payload: response.data });\n  //     })\n  //   }\n  //   const sendEditIngredient = (newIngredient) => {\n  //       loadingAction(dispatch, async () => {\n  //       const response = await axios.patch(`${API_BASE_URL\n  //       }/ingredient/${newIngredient.id}`, newIngredient);\n  //       dispatch({\n  //         type: INGREDIENT_EDIT,\n  //         payload: response.data,\n  //         id: response.data.id,\n  //       });\n  //     })\n  //   }\n\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newIngredient = dataMap();\n    sendDataIngredient(newIngredient);\n    setState({\n      ingredientWeight: \"\",\n      ingredientName: \"\",\n      ingredientCost: \"\"\n    });\n  }; //   const { ingredientCost, ingredientName, ingredientWeight } = state;\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: \"waves-effect waves-light btn modal-trigger\",\n    \"data-target\": id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: id,\n    className: \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, \"jestem\", /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextInput, {\n    type: \"text\",\n    name: \"ingredientName\",\n    className: \"validate\",\n    value: todo,\n    onChange: handleChange,\n    htmlFor: \"ingredientName\",\n    label: \"Ingredient Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: \"btn teal darken-2 z-depth-2 modal-close\",\n    text: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nexport default AddEditIngredient;","map":{"version":3,"sources":["/home/dawid/trening/call/src/components/addEditTask/AddEditTask.jsx"],"names":["React","useState","useContext","useEffect","Button","TextInput","M","AddEditIngredient","id","props","AutoInit","handleChange","event","setState","state","target","name","value","handleSubmit","preventDefault","newIngredient","dataMap","sendDataIngredient","ingredientWeight","ingredientName","ingredientCost","todo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,CAAP,MAAc,iBAAd;;AAGA,MAAMC,iBAAiB,GAAG,CAAC;AAACC,EAAAA,EAAE,GAAG,IAAN;AAAY,KAAGC;AAAf,CAAD,KAA2B;AAGjDN,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,CAAC,CAACI,QAAF;AACH,GAFQ,EAEN,EAFM,CAAT,CAHiD,CAMrD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9BC,IAAAA,QAAQ,CAAC,EACP,GAAGC,KADI;AAEP,OAACF,KAAK,CAACG,MAAN,CAAaC,IAAd,GAAqBJ,KAAK,CAACG,MAAN,CAAaE;AAF3B,KAAD,CAAR;AAID,GALD,CAzBmD,CAgCrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEE,QAAMC,YAAY,GAAIN,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACO,cAAN;AACA,UAAMC,aAAa,GAAGC,OAAO,EAA7B;AACDC,IAAAA,kBAAkB,CAACF,aAAD,CAAlB;AACCP,IAAAA,QAAQ,CAAC;AAAEU,MAAAA,gBAAgB,EAAE,EAApB;AAAwBC,MAAAA,cAAc,EAAE,EAAxC;AAA4CC,MAAAA,cAAc,EAAE;AAA5D,KAAD,CAAR;AACD,GALD,CA3EmD,CAkFrD;;;AAEE,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,4CADZ;AAEE,mBAAajB,EAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AAAK,IAAA,EAAE,EAAEA,EAAT;AAAa,IAAA,SAAS,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAEE;AAAM,IAAA,QAAQ,EAAEU,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,gBAFP;AAGE,IAAA,SAAS,EAAC,UAHZ;AAIE,IAAA,KAAK,EAAEQ,IAJT;AAKE,IAAA,QAAQ,EAAEf,YALZ;AAME,IAAA,OAAO,EAAC,gBANV;AAOE,IAAA,KAAK,EAAC,iBAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAYE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,yCAFZ;AAGE,IAAA,IAAI,EAAC,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAZF,CADF,CAFF,CAPF,CADF;AAmCD,CAvHD;;AAyHA,eAAeJ,iBAAf","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport { Button } from \"../button/Button\";\nimport TextInput from '../textInput/TextInput'\nimport M from \"materialize-css\";\n\n\nconst AddEditIngredient = ({id = 'id', ...props}) => {\n\n\n    useEffect(() => {\n        M.AutoInit();\n    }, []);\n//   const { dispatch } = useContext(StoreContext);\n\n//   const [state, setState] = useState({\n//     ingredientName: \"\",\n//     ingredientCost: \"\",\n//     ingredientWeight: \"\",\n//   });\n//   useEffect(() => {\n//     M.AutoInit();\n//     if (props.ingredient) {\n//       setState({\n//         ...state,\n//         ingredientName: props.ingredient.ingredientName,\n//         ingredientCost: props.ingredient.ingredientCost,\n//         ingredientWeight: props.ingredient.ingredientWeight,\n//       });\n//     }\n//   }, []);\n\n  const handleChange = (event) => {\n    setState({\n      ...state,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n//   const dataMap = () => {\n//     const newIngredient = {\n//       ingredientName: state.ingredientName,\n//       ingredientCost: parseFloat(state.ingredientCost),\n//       ingredientWeight: parseFloat(state.ingredientWeight),\n//       ingredientRatio: parseFloat(\n//         state.ingredientCost / state.ingredientWeight\n//       ),\n//     };\n//     if(props.ingredient){\n//       newIngredient.id = props.ingredient.id\n//     }\n//     return newIngredient;\n//   };\n\n//   function sendDataIngredient (newIngredient) {\n//     if (props.ingredient) {\n//       sendEditIngredient(newIngredient);\n//       } else {\n//         sendNewIngredient(newIngredient);\n//       }\n//   }\n\n//   const sendNewIngredient = (newIngredient) => {\n//     loadingAction(dispatch, async () => {\n//       const response = await axios.post(`${API_BASE_URL\n//       }/ingredient`, newIngredient);\n//       dispatch({ type: INGREDIENT_ADD, payload: response.data });\n//     })\n//   }\n\n//   const sendEditIngredient = (newIngredient) => {\n//       loadingAction(dispatch, async () => {\n//       const response = await axios.patch(`${API_BASE_URL\n//       }/ingredient/${newIngredient.id}`, newIngredient);\n//       dispatch({\n//         type: INGREDIENT_EDIT,\n//         payload: response.data,\n//         id: response.data.id,\n//       });\n//     })\n//   }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const newIngredient = dataMap();\n   sendDataIngredient(newIngredient);\n    setState({ ingredientWeight: \"\", ingredientName: \"\", ingredientCost: \"\" });\n  };\n\n//   const { ingredientCost, ingredientName, ingredientWeight } = state;\n\n  return (\n    <div>\n      <a\n        className='waves-effect waves-light btn modal-trigger'\n        data-target={id}\n      >\n        {/* {props.ingredient ? \"Edit\" : \"Add New\"} */}\n      </a>\n      <div id={id} className='modal'>\n          jestem\n        <form onSubmit={handleSubmit}>\n          <div className='modal-content'>\n            {/* <h4> {props.ingredient ? \"Edit\" : \"Add New Ingredient\"}</h4> */}\n            <TextInput\n              type='text'\n              name='ingredientName'\n              className='validate'\n              value={todo}\n              onChange={handleChange}\n              htmlFor='ingredientName'\n              label='Ingredient Name'\n            />\n         \n            <div className='modal-footer'>\n              <Button\n                type='submit'\n                className=\"btn teal darken-2 z-depth-2 modal-close\"\n                text='submit'\n              />\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default AddEditIngredient;\n"]},"metadata":{},"sourceType":"module"}