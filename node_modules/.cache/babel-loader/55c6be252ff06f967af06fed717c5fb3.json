{"ast":null,"code":"var _jsxFileName = \"/home/dawid/trening/call/src/components/addEditTask/AddEditTask.jsx\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { Button } from \"../button/Button\";\nimport TextInput from '../textInput/TextInput';\nimport M from \"materialize-css\";\nimport { ADD_JOB } from \"../../types/types\";\nimport { StoreContext } from '../../context/StoreContext';\n\nconst AddEditIngredient = ({ ...props\n}) => {\n  const {\n    dispatch\n  } = useContext(StoreContext);\n  useEffect(() => {\n    M.AutoInit();\n\n    if (props.job) {\n      setState({ ...state,\n        id: props.job.id,\n        todo: props.job.todo,\n        dayId: props.job.dayId\n      });\n    }\n  }, []);\n  const [todo, setTodo] = useState(\"\");\n\n  const handleChange = event => {\n    console.log(event.target.value);\n    setTodo(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newJob = {\n      id: new Date().valueOf(),\n      dayId: props.id,\n      todo: todo\n    };\n    dispatch({\n      type: ADD_JOB,\n      payload: newJob\n    });\n    setTodo(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: \"btn modal-trigger\",\n    \"data-target\": props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Add Job\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: props.id,\n    className: \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \" \", props.job ? \"Edit Job\" : \"Add New Job\"), /*#__PURE__*/React.createElement(TextInput, {\n    type: \"text\",\n    name: \"Job to DO\",\n    className: \"validate\",\n    value: todo,\n    onChange: handleChange,\n    htmlFor: \"Job to DO\",\n    label: \"Job to Do\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: \"btn teal darken-2 z-depth-2 modal-close\",\n    text: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nexport default AddEditIngredient;","map":{"version":3,"sources":["/home/dawid/trening/call/src/components/addEditTask/AddEditTask.jsx"],"names":["React","useState","useContext","useEffect","Button","TextInput","M","ADD_JOB","StoreContext","AddEditIngredient","props","dispatch","AutoInit","job","setState","state","id","todo","dayId","setTodo","handleChange","event","console","log","target","value","handleSubmit","preventDefault","newJob","Date","valueOf","type","payload"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport { Button } from \"../button/Button\";\nimport TextInput from '../textInput/TextInput'\nimport M from \"materialize-css\";\nimport { ADD_JOB } from \"../../types/types\";\nimport { StoreContext } from '../../context/StoreContext';\n\n\nconst AddEditIngredient = ({ ...props}) => {\n    const { dispatch } = useContext(StoreContext);\n\n    useEffect(() => {\n        M.AutoInit();\n\n\n        if (props.job) {\n            setState({\n              ...state,\n              id: props.job.id,\n              todo: props.job.todo,\n              dayId: props.job.dayId\n            });\n          }\n    }, []);\n\n  const [ todo, setTodo ] = useState(\"\");\n\n\n  const handleChange = (event) => {\n      console.log(event.target.value)\n    setTodo(event.target.value)\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const newJob = {\n        id: new Date().valueOf(),\n        dayId: props.id,\n        todo: todo\n    }\n    dispatch({ type: ADD_JOB, payload: newJob });\n    setTodo(\"\")\n  };\n\n  return (\n    <div>\n      <a\n        className='btn modal-trigger'\n        data-target={props.id}\n      >\n          Add Job\n      </a>\n      <div id={props.id} className='modal'> \n       <form onSubmit={handleSubmit}>\n          <div className='modal-content'>\n            <h4> {props.job ? \"Edit Job\" : \"Add New Job\"}</h4> \n            <TextInput\n              type='text'\n              name='Job to DO'\n              className='validate'\n              value={todo}\n              onChange={handleChange}\n              htmlFor='Job to DO'\n              label='Job to Do'\n            />\n            <div className='modal-footer'>\n              <Button\n                type='submit'\n                className=\"btn teal darken-2 z-depth-2 modal-close\"\n                text='submit'\n              />\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default AddEditIngredient;\n"]},"metadata":{},"sourceType":"module"}