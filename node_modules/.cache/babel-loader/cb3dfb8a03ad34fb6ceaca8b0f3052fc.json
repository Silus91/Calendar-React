{"ast":null,"code":"var _jsxFileName = \"/home/dawid/trening/call/src/components/calendar/index.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport Header from \"./header\";\nimport \"./styles.css\";\nexport default function Calendar({\n  value,\n  onChange\n}) {\n  const [calendar, setCalendar] = useState([]);\n  useEffect(() => {\n    setCalendar(buildCalendar(value));\n  }, [value]);\n\n  function buildCalendar(date) {\n    const a = [];\n    const startDay = date.clone().startOf(\"month\").startOf(\"week\");\n    const endDay = date.clone().endOf(\"month\").endOf(\"week\");\n\n    const _date = startDay.clone().subtract(1, \"day\");\n\n    while (_date.isBefore(endDay, \"day\")) {\n      a.push(Array(7).fill(0).map(() => _date.add(1, \"day\").clone()));\n    }\n\n    return a;\n  }\n\n  function isSelected(day) {\n    return value.isSame(day, \"day\");\n  }\n\n  function beforeToday(day) {\n    return moment(day).isBefore(new Date(), \"day\");\n  }\n\n  function isToday(day) {\n    return moment(new Date()).isSame(day, \"day\");\n  }\n\n  function dayStyles(day) {\n    if (beforeToday(day)) return \"before\";\n    if (isSelected(day)) return \"selected\";\n    if (isToday(day)) return \"today\";\n    return \"\";\n  }\n\n  const dayNames = [\"s\", \"m\", \"t\", \"w\", \"t\", \"f\", \"s\"];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calendar container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    value: value,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"day-names\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, dayNames.map(d => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"week\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, d))), calendar.map((week, wi) => /*#__PURE__*/React.createElement(\"div\", {\n    key: wi,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, week.map((day, di) => /*#__PURE__*/React.createElement(\"div\", {\n    key: di,\n    className: \"day\",\n    onClick: () => {\n      if (day < moment(new Date()).startOf(\"day\")) return;\n      onChange(day);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: dayStyles(day),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  })))))));\n}","map":{"version":3,"sources":["/home/dawid/trening/call/src/components/calendar/index.jsx"],"names":["React","useState","useEffect","moment","Header","Calendar","value","onChange","calendar","setCalendar","buildCalendar","date","a","startDay","clone","startOf","endDay","endOf","_date","subtract","isBefore","push","Array","fill","map","add","isSelected","day","isSame","beforeToday","Date","isToday","dayStyles","dayNames","d","week","wi","di"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport Header from \"./header\";\nimport \"./styles.css\";\n\nexport default function Calendar({ value, onChange }) {\n  const [calendar, setCalendar] = useState([]);\n\n  useEffect(() => {\n    setCalendar(buildCalendar(value));\n  }, [value]);\n\n  function buildCalendar(date) {\n    const a = [];\n\n    const startDay = date.clone().startOf(\"month\").startOf(\"week\");\n    const endDay = date.clone().endOf(\"month\").endOf(\"week\");\n\n    const _date = startDay.clone().subtract(1, \"day\");\n\n    while (_date.isBefore(endDay, \"day\")) {\n      a.push(\n        Array(7)\n          .fill(0)\n          .map(() => _date.add(1, \"day\").clone())\n      );\n    }\n    return a;\n  }\n\n  function isSelected(day) {\n    return value.isSame(day, \"day\");\n  }\n\n  function beforeToday(day) {\n    return moment(day).isBefore(new Date(), \"day\");\n  }\n\n  function isToday(day) {\n    return moment(new Date()).isSame(day, \"day\");\n  }\n\n  function dayStyles(day) {\n    if (beforeToday(day)) return \"before\";\n    if (isSelected(day)) return \"selected\";\n    if (isToday(day)) return \"today\";\n    return \"\";\n  }\n\n  const dayNames = [\"s\", \"m\", \"t\", \"w\", \"t\", \"f\", \"s\"];\n\n  return (\n    <div className=\"calendar container\">\n      <Header value={value} onChange={onChange} />\n      <div className=\"body\">\n        <div className=\"day-names\">\n          {dayNames.map((d) => (\n            <div className=\"week\">{d}</div>\n          ))}\n        </div>\n        {calendar.map((week, wi) => (\n          <div key={wi}>\n            {week.map((day, di) => (\n              <div\n                key={di}\n                className=\"day\"\n                onClick={() => {\n                  if (day < moment(new Date()).startOf(\"day\")) return;\n                  onChange(day);\n                }}\n              >\n                <div className={dayStyles(day)}>\n                  {/* {day.format(\"D\").toString()} */}\n                </div>\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}