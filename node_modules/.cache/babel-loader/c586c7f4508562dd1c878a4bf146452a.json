{"ast":null,"code":"var _jsxFileName = \"/home/dawid/trening/call/src/components/calendar/Calendar.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport CalendarHeader from \"./header\";\nimport \"./styles.css\";\nimport DayList from '../dayList/DayList';\nimport M from \"materialize-css\";\n\nconst Calendar = ({\n  value,\n  onChange\n}) => {\n  const [calendar, setCalendar] = useState([]);\n  useEffect(() => {\n    M.AutoInit();\n    setCalendar(buildCalendar(value));\n  }, [value]);\n\n  function buildCalendar(date) {\n    const a = [];\n    const startDay = date.clone().startOf(\"month\").startOf(\"week\");\n    const endDay = date.clone().endOf(\"month\").endOf(\"week\");\n\n    const _date = startDay.clone().subtract(1, \"day\");\n\n    while (_date.isBefore(endDay, \"day\")) {\n      a.push(Array(7).fill(0).map(() => _date.add(1, \"day\").clone()));\n    }\n\n    return a;\n  }\n\n  const isSelected = day => {\n    return value.isSame(day, \"day\");\n  };\n\n  const beforeToday = day => {\n    return moment(day).isBefore(new Date(), \"day\");\n  };\n\n  const isToday = day => {\n    return moment(new Date()).isSame(day, \"day\");\n  };\n\n  const dayStyles = day => {\n    if (beforeToday(day)) return \"before\";\n    if (isSelected(day)) return \"selected\";\n    if (isToday(day)) return \"today\";\n    return \"\";\n  };\n\n  const id = 34566550;\n  const dayNames = [\"s\", \"m\", \"t\", \"w\", \"t\", \"f\", \"s\"];\n\n  const dayId = day => {\n    return (value.format(\"YYYY\") + value.format('MMMM') + day.format(\"D\")).toString();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calendar container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CalendarHeader, {\n    value: value,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"day-names\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, dayNames.map((d, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"week\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, d))), calendar.map((week, weekNumber) => /*#__PURE__*/React.createElement(\"div\", {\n    key: weekNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, week.map((day, dayNumber) => /*#__PURE__*/React.createElement(\"div\", {\n    key: dayNumber,\n    className: \"day\",\n    onClick: () => {\n      if (day < moment(new Date()).startOf(\"day\")) return;\n      onChange(day);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: dayStyles(day),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DayList, {\n    day: day.format(\"D\").toString(),\n    id: dayId(day),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }))))))), /*#__PURE__*/React.createElement(DayList, {\n    id: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Calendar;","map":{"version":3,"sources":["/home/dawid/trening/call/src/components/calendar/Calendar.jsx"],"names":["React","useState","useEffect","moment","CalendarHeader","DayList","M","Calendar","value","onChange","calendar","setCalendar","AutoInit","buildCalendar","date","a","startDay","clone","startOf","endDay","endOf","_date","subtract","isBefore","push","Array","fill","map","add","isSelected","day","isSame","beforeToday","Date","isToday","dayStyles","id","dayNames","dayId","format","toString","d","index","week","weekNumber","dayNumber"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport CalendarHeader from \"./header\";\nimport \"./styles.css\";\nimport DayList from '../dayList/DayList';\nimport M from \"materialize-css\";\n\nconst Calendar = ({ value, onChange }) => {\n\n  const [calendar, setCalendar] = useState([]);\n\n  useEffect(() => {\n    M.AutoInit();\n    setCalendar(buildCalendar(value));\n  }, [value]);\n\n  function buildCalendar(date) {\n    const a = [];\n\n    const startDay = date.clone().startOf(\"month\").startOf(\"week\");\n    const endDay = date.clone().endOf(\"month\").endOf(\"week\");\n\n    const _date = startDay.clone().subtract(1, \"day\");\n\n    while (_date.isBefore(endDay, \"day\")) {\n      a.push(\n        Array(7)\n          .fill(0)\n          .map(() => _date.add(1, \"day\").clone())\n      );\n    }\n    return a;\n  }\n\n  const isSelected = (day) => {\n    return value.isSame(day, \"day\");\n  }\n\n  const beforeToday = (day) => {\n    return moment(day).isBefore(new Date(), \"day\");\n  }\n\n  const isToday = (day) => {\n    return moment(new Date()).isSame(day, \"day\");\n  }\n\n  const dayStyles = (day) => {\n    if (beforeToday(day)) return \"before\";\n    if (isSelected(day)) return \"selected\";\n    if (isToday(day)) return \"today\";\n    return \"\";\n  }\n  \n  const id = 34566550;\n  const dayNames = [\"s\", \"m\", \"t\", \"w\", \"t\", \"f\", \"s\"];\n\n\n  const dayId = (day) => {\n    return((value.format(\"YYYY\") + value.format('MMMM') + day.format(\"D\")).toString() )\n  } \n\n  return (\n    <div className=\"calendar container\">\n      <CalendarHeader value={value} onChange={onChange} />\n      <div className=\"body\">\n        <div className=\"day-names\">\n          {dayNames.map((d, index) => (\n            <div key={index} className=\"week\">{d}</div>\n          ))}\n        </div>\n        {calendar.map((week, weekNumber) => (\n          <div key={weekNumber}>\n            {week.map((day, dayNumber) => (\n              <div\n                key={dayNumber}\n                className=\"day\"\n                onClick={() => {\n                  if (day < moment(new Date()).startOf(\"day\")) return;\n                  onChange(day);\n                }}\n              >\n\n                <div className={dayStyles(day)}>\n                <DayList day={day.format(\"D\").toString()} id={dayId(day)}/>\n                </div>\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n      <DayList id={id}/>\n    </div>\n  );\n}\n\n\nexport default Calendar;\n\n"]},"metadata":{},"sourceType":"module"}