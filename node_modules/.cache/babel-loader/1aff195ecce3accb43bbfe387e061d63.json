{"ast":null,"code":"var _jsxFileName = \"/home/dawid/trening/call/src/components/addEditTask/AddEditTask.jsx\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { Button } from \"../button/Button\";\nimport TextInput from '../textInput/TextInput';\nimport M from \"materialize-css\";\nimport { ADD_JOB, EDIT_JOB } from \"../../types/types\";\nimport { StoreContext } from '../../context/StoreContext';\n\nconst AddEditIngredient = ({ ...props\n}) => {\n  const {\n    dispatch\n  } = useContext(StoreContext);\n  useEffect(() => {\n    M.AutoInit();\n\n    if (props.job) {\n      setState({ ...state,\n        id: props.job.id,\n        todo: props.job.todo,\n        dayId: props.job.dayId\n      });\n    }\n  }, []);\n  const [state, setState] = useState({\n    todo: \"\",\n    id: \"\",\n    dayId: \"\"\n  });\n\n  const handleChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  console.log(\"event\", state);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newJob = dataMap();\n\n    if (props.job) {\n      dispatch({\n        type: EDIT_JOB,\n        payload: newJob,\n        id: newJob.id\n      });\n    } else {\n      dispatch({\n        type: ADD_JOB,\n        payload: newJob\n      });\n    }\n\n    setState({\n      id: \"\",\n      todo: \"\",\n      dayId: \"\"\n    });\n  };\n\n  const dataMap = () => {\n    const newJob = {\n      id: new Date().valueOf(),\n      dayId: props.id,\n      todo: state.todo\n    };\n\n    if (props.job) {\n      newJob.id = props.job.id;\n    }\n\n    return newJob;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: \"btn modal-trigger\",\n    \"data-target\": props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, props.job ? \"Edit Job\" : \"Add Job\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: props.id,\n    className: \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \" \", props.job ? \"Edit Job\" : \"Add New Job\"), /*#__PURE__*/React.createElement(TextInput, {\n    type: \"text\",\n    name: \"todo\",\n    className: \"validate\",\n    value: state.todo,\n    onChange: handleChange,\n    htmlFor: \"Job to DO\",\n    label: \"Job to Do\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: \"btn teal darken-2 z-depth-2 modal-close\",\n    text: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nexport default AddEditIngredient;","map":{"version":3,"sources":["/home/dawid/trening/call/src/components/addEditTask/AddEditTask.jsx"],"names":["React","useState","useContext","useEffect","Button","TextInput","M","ADD_JOB","EDIT_JOB","StoreContext","AddEditIngredient","props","dispatch","AutoInit","job","setState","state","id","todo","dayId","handleChange","event","target","name","value","console","log","handleSubmit","preventDefault","newJob","dataMap","type","payload","Date","valueOf"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport { Button } from \"../button/Button\";\nimport TextInput from '../textInput/TextInput'\nimport M from \"materialize-css\";\nimport { ADD_JOB, EDIT_JOB } from \"../../types/types\";\nimport { StoreContext } from '../../context/StoreContext';\n\n\nconst AddEditIngredient = ({ ...props}) => {\n  const { dispatch } = useContext(StoreContext);\n\n  useEffect(() => {\n    M.AutoInit();\n    if (props.job) {\n      setState({\n        ...state,\n        id: props.job.id,\n        todo: props.job.todo,\n        dayId: props.job.dayId,\n      });\n    }\n  }, []);\n\n  const [state, setState] = useState({\n    todo: \"\",\n    id: \"\",\n    dayId: \"\",\n  });\n\n  const handleChange = (event) => {\n    setState({\n      ...state,\n      [event.target.name]: event.target.value,\n    }); \n\n  };\n  console.log(\"event\", state)\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const newJob = dataMap();\n    if(props.job) {\n      dispatch({ type: EDIT_JOB, payload: newJob, id: newJob.id });\n    } else {\n      dispatch({ type: ADD_JOB, payload: newJob });\n    }\n\n    setState({ id: \"\", todo: \"\", dayId: \"\" });\n  };\n\n  const dataMap = () => {\n    const newJob = {\n      id: new Date().valueOf(),\n      dayId: props.id,\n      todo: state.todo\n    };\n    if(props.job){\n      newJob.id = props.job.id\n    }\n    return newJob;\n  };\n\n\n\n  return (\n    <div>\n      <a\n        className='btn modal-trigger'\n        data-target={props.id}\n      >\n        {props.job ? \"Edit Job\" : \"Add Job\" }\n      </a>\n      <div id={props.id} className='modal'> \n       <form onSubmit={handleSubmit}>\n          <div className='modal-content'>\n            <h4> {props.job ? \"Edit Job\" : \"Add New Job\"}</h4> \n            <TextInput\n              type='text'\n              name='todo'\n              className='validate'\n              value={state.todo}\n              onChange={handleChange}\n              htmlFor='Job to DO'\n              label='Job to Do'\n            />\n            <div className='modal-footer'>\n              <Button\n                type='submit'\n                className=\"btn teal darken-2 z-depth-2 modal-close\"\n                text='submit'\n              />\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default AddEditIngredient;\n"]},"metadata":{},"sourceType":"module"}