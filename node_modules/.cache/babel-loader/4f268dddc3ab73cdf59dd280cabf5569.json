{"ast":null,"code":"var _jsxFileName = \"/home/dawid/trening/call/src/components/calendar/header.jsx\";\nimport React from \"react\";\nexport default function CalendarHeader({\n  value,\n  onChange\n}) {\n  function currMonthName() {\n    return value.format(\"MMMM\");\n  }\n\n  function currYear() {\n    return value.format(\"YYYY\");\n  }\n\n  function prevMonth() {\n    return value.clone().subtract(1, \"month\");\n  }\n\n  function nextMonth() {\n    return value.clone().add(1, \"month\");\n  }\n\n  function thisMonth() {\n    return value.isSame(new Date(), \"month\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previous\",\n    onClick: () => !thisMonth() && onChange(prevMonth()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, !thisMonth() ? /*#__PURE__*/React.createElement(\"i\", {\n    class: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 27\n    }\n  }, \"arrow_back\") : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"current\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, currMonthName(), \" \", currYear()), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"next\",\n    onClick: () => onChange(nextMonth()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"arrow_forward\")));\n}","map":{"version":3,"sources":["/home/dawid/trening/call/src/components/calendar/header.jsx"],"names":["React","CalendarHeader","value","onChange","currMonthName","format","currYear","prevMonth","clone","subtract","nextMonth","add","thisMonth","isSame","Date"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,cAAT,CAAwB;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAxB,EAA6C;AAC1D,WAASC,aAAT,GAAyB;AACvB,WAAOF,KAAK,CAACG,MAAN,CAAa,MAAb,CAAP;AACD;;AAED,WAASC,QAAT,GAAoB;AAClB,WAAOJ,KAAK,CAACG,MAAN,CAAa,MAAb,CAAP;AACD;;AAED,WAASE,SAAT,GAAqB;AACnB,WAAOL,KAAK,CAACM,KAAN,GAAcC,QAAd,CAAuB,CAAvB,EAA0B,OAA1B,CAAP;AACD;;AAED,WAASC,SAAT,GAAqB;AACnB,WAAOR,KAAK,CAACM,KAAN,GAAcG,GAAd,CAAkB,CAAlB,EAAqB,OAArB,CAAP;AACD;;AAED,WAASC,SAAT,GAAqB;AACnB,WAAOV,KAAK,CAACW,MAAN,CAAa,IAAIC,IAAJ,EAAb,EAAyB,OAAzB,CAAP;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,OAAO,EAAE,MAAM,CAACF,SAAS,EAAV,IAAgBT,QAAQ,CAACI,SAAS,EAAV,CAFzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIG,CAACK,SAAS,EAAV,gBAAiB;AAAG,IAAA,KAAK,EAAC,gBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAjB,GACN,IALG,CADF,eAQE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,aAAa,EADhB,OACqBE,QAAQ,EAD7B,CARF,eAWE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,OAAO,EAAE,MAAMH,QAAQ,CAACO,SAAS,EAAV,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAG,IAAA,KAAK,EAAC,gBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADA,CAXF,CADF;AAkBD","sourcesContent":["import React from \"react\";\n\nexport default function CalendarHeader({ value, onChange }) {\n  function currMonthName() {\n    return value.format(\"MMMM\");\n  }\n\n  function currYear() {\n    return value.format(\"YYYY\");\n  }\n\n  function prevMonth() {\n    return value.clone().subtract(1, \"month\");\n  }\n\n  function nextMonth() {\n    return value.clone().add(1, \"month\");\n  }\n\n  function thisMonth() {\n    return value.isSame(new Date(), \"month\");\n  }\n\n  return (\n    <div className=\"header\">\n      <div\n        className=\"previous\"\n        onClick={() => !thisMonth() && onChange(prevMonth())}\n      >\n        {!thisMonth() ?   <i class=\"material-icons\">arrow_back</i>\n : null}\n      </div>\n      <div className=\"current\">\n        {currMonthName()} {currYear()}\n      </div>\n      <div className=\"next\" onClick={() => onChange(nextMonth())}>\n      <i class=\"material-icons\">arrow_forward\n</i>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}